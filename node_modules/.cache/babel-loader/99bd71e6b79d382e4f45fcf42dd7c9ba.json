{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huang\\\\Desktop\\\\frontendDevops-master\\\\frontendDevops-master\\\\clientapp\\\\src\\\\components\\\\Rating.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Navigate from \"./Navigate\";\nimport Col from \"react-bootstrap/Col\";\nimport { Row } from 'react-bootstrap';\nexport class Rating extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      ratings: [],\n      musiclist: [],\n      rec: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props === undefined || this.props === null) {\n      this.props.history.push('/unauthorized');\n    } else {\n      if (this.props.email === undefined || this.props.email === null) {\n        this.props.history.push('/unauthorized');\n      }\n\n      this.setState({\n        email: this.props.email\n      }, console.log(\"r:Get email from app component \" + this.props.email));\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"get rating \" + this.state.email);\n    const url = 'http://localhost:8080/getUserRatings?email=' + this.state.email;\n    fetch(url, {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data !== null) {\n        this.setState({\n          ratings: data.map(item => ({\n            song_name: item.song_name,\n            song_artist: item.song_artist,\n            rate: item.rate,\n            comment: item.comment\n          })),\n          rec: true\n        });\n      } else {\n        this.setState({\n          rec: false\n        });\n      }\n    });\n  }\n\n  handleClick() {\n    const url = 'http://localhost:8080//getRecommendByUserName?email=' + this.state.email;\n    fetch(url, {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data !== null) {\n        this.setState({\n          musiclist: data.map(item => ({\n            song_name: item.song_name,\n            song_artist: item.song_artist,\n            strength: item.strength\n          }))\n        });\n      }\n    });\n  }\n\n  render() {\n    let {\n      hasRec\n    } = this.state.rec;\n\n    const renderInfo = () => {\n      if (!hasRec) {\n        return /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 16\n          }\n        }, \"No recommendation for you\");\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navigate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"recommendation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      style: {\n        fontSize: '27px',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Recommend music based on other users' and your ratings\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Get recommendation\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, this.state.musiclist.map((listValue, index) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"Num \", index + 1, \" suggested music: \"), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, \"Song name : \", listValue.song_name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }\n      }, \"Song artist : \", listValue.song_artist), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }\n      }, \"Recommended strength : \", listValue.strength), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 28\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 38\n      }\n    }), this.state.ratings.map((listValue, index) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 16\n        }\n      }, \"Song name : \", listValue.song_name), /*#__PURE__*/React.createElement(Col, {\n        style: {\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }\n      }, \"Song artist : \", listValue.song_artist), /*#__PURE__*/React.createElement(Col, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 16\n        }\n      }, \"Your rating : \", listValue.rate), /*#__PURE__*/React.createElement(Col, {\n        style: {\n          color: 'blue'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 16\n        }\n      }, \"Your comment : \", listValue.comment), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 22\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, renderInfo())));\n  }\n\n}\nexport default withRouter(Rating);","map":{"version":3,"sources":["C:/Users/huang/Desktop/frontendDevops-master/frontendDevops-master/clientapp/src/components/Rating.js"],"names":["React","Component","withRouter","Container","Form","Button","Navigate","Col","Row","Rating","constructor","props","state","email","ratings","musiclist","rec","handleClick","bind","componentWillMount","undefined","history","push","setState","console","log","componentDidMount","url","fetch","method","then","response","json","data","map","item","song_name","song_artist","rate","comment","strength","render","hasRec","renderInfo","fontSize","fontWeight","listValue","index","color"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,OAAO,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AACpCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAC,IADG;AAETC,MAAAA,OAAO,EAAC,EAFC;AAGTC,MAAAA,SAAS,EAAC,EAHD;AAITC,MAAAA,GAAG,EAAC;AAJK,KAAX;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,QAAG,KAAKR,KAAL,KAAeS,SAAf,IAA4B,KAAKT,KAAL,KAAe,IAA9C,EAAmD;AACjD,WAAKA,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACD,KAFD,MAGI;AACF,UAAG,KAAKX,KAAL,CAAWE,KAAX,KAAqBO,SAArB,IAAkC,KAAKT,KAAL,CAAWE,KAAX,KAAqB,IAA1D,EAA+D;AAC9D,aAAKF,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACA;;AACF,WAAKC,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWE;AAAlB,OAAd,EAAuCW,OAAO,CAACC,GAAR,CAAY,oCAAkC,KAAKd,KAAL,CAAWE,KAAzD,CAAvC;AACA;AACF;;AAEDa,EAAAA,iBAAiB,GAAE;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAc,KAAKb,KAAL,CAAWC,KAArC;AACF,UAAMc,GAAG,GAAG,gDAA8C,KAAKf,KAAL,CAAWC,KAArE;AACAe,IAAAA,KAAK,CAACD,GAAD,EAAM;AACHE,MAAAA,MAAM,EAAE;AADL,KAAN,CAAL,CAGKC,IAHL,CAISC,QAAD,IAAY;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,KAJ9C,EAMKF,IANL,CAMUG,IAAI,IAAE;AACR,UAAGA,IAAI,KAAG,IAAV,EAAe;AACb,aAAKV,QAAL,CAAc;AACZT,UAAAA,OAAO,EAAEmB,IAAI,CAACC,GAAL,CAASC,IAAI,KAAK;AACvBC,YAAAA,SAAS,EAAED,IAAI,CAACC,SADO;AAEvBC,YAAAA,WAAW,EAAEF,IAAI,CAACE,WAFK;AAGvBC,YAAAA,IAAI,EAACH,IAAI,CAACG,IAHa;AAIvBC,YAAAA,OAAO,EAACJ,IAAI,CAACI;AAJU,WAAL,CAAb,CADG;AAOVvB,UAAAA,GAAG,EAAC;AAPM,SAAd;AAQD,OATD,MAUI;AACA,aAAKO,QAAL,CAAc;AAACP,UAAAA,GAAG,EAAC;AAAL,SAAd;AACH;AACF,KApBP;AAsBD;;AAEDC,EAAAA,WAAW,GAAE;AACX,UAAMU,GAAG,GAAG,yDAAuD,KAAKf,KAAL,CAAWC,KAA9E;AACAe,IAAAA,KAAK,CAACD,GAAD,EAAM;AACHE,MAAAA,MAAM,EAAE;AADL,KAAN,CAAL,CAGKC,IAHL,CAIOC,QAAD,IAAY;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,KAJ5C,EAMKF,IANL,CAMUG,IAAI,IAAE;AACR,UAAGA,IAAI,KAAG,IAAV,EAAe;AACX,aAAKV,QAAL,CAAc;AACVR,UAAAA,SAAS,EAAEkB,IAAI,CAACC,GAAL,CAASC,IAAI,KAAK;AACzBC,YAAAA,SAAS,EAAED,IAAI,CAACC,SADS;AAEzBC,YAAAA,WAAW,EAAEF,IAAI,CAACE,WAFO;AAGzBG,YAAAA,QAAQ,EAACL,IAAI,CAACK;AAHW,WAAL,CAAb;AADD,SAAd;AAOP;AAAC,KAfN;AAiBD;;AACDC,EAAAA,MAAM,GAAG;AACP,QAAI;AAACC,MAAAA;AAAD,QAAW,KAAK9B,KAAL,CAAWI,GAA1B;;AACA,UAAM2B,UAAU,GAAG,MAAI;AACrB,UAAG,CAACD,MAAJ,EAAW;AACT,4BAAO,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACD;AACF,KAJD;;AAKA,wBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAACE,QAAAA,QAAQ,EAAE,MAAX;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADF,CADA,eAIA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAK5B,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJA,CADF,CADA,CADA,eAUM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVN,eAUW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVX,eAUgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVhB,eAWA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKL,KAAL,CAAWG,SAAX,CAAqBmB,GAArB,CAAyB,CAAEY,SAAF,EAAaC,KAAb,KAAwB;AACjD,0BACE,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuBA,KAAK,GAAC,CAA7B,uBADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcD,SAAS,CAACV,SADxB,CAFF,eAKG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACeU,SAAS,CAACT,WADzB,CALH,eAQG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACwBS,SAAS,CAACN,QADlC,CARH,eAUU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVV,eAUe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVf,CADF;AAcD,KAfC,CADF,CAXA,CADA,eA+BE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,eAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3B,EACG,KAAK5B,KAAL,CAAWE,OAAX,CAAmBoB,GAAnB,CAAuB,CAAEY,SAAF,EAAaC,KAAb,KAAwB;AAClD,0BACE,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACaF,SAAS,CAACV,SADvB,CADH,eAIG,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACeF,SAAS,CAACT,WADzB,CAJH,eAOG,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACeF,SAAS,CAACR,IADzB,CAPH,eAUG,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACgBF,SAAS,CAACP,OAD1B,CAVH,eAYS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZT,CADF;AAgBD,KAjBI,CADH,CA/BF,eAmDE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCI,UAAU,EADX,CAnDF,CAFA,CADJ;AA4DD;;AA1ImC;AA6IpC,eAAezC,UAAU,CAACO,MAAD,CAAzB","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Navigate from \"./Navigate\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Row } from 'react-bootstrap';\r\n\r\nexport class Rating extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      email:null,\r\n      ratings:[],\r\n      musiclist:[],\r\n      rec:true\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if(this.props === undefined || this.props === null){\r\n      this.props.history.push('/unauthorized');\r\n    }\r\n    else{\r\n      if(this.props.email === undefined || this.props.email === null){\r\n       this.props.history.push('/unauthorized');\r\n      }\r\n     this.setState({email:this.props.email},console.log(\"r:Get email from app component \"+this.props.email));\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      console.log(\"get rating \"+this.state.email);\r\n    const url = 'http://localhost:8080/getUserRatings?email='+this.state.email;\r\n    fetch(url, { \r\n            method: 'GET'\r\n        })\r\n        .then(\r\n            (response)=>{ return response.json() }\r\n          )\r\n        .then(data=>{\r\n            if(data!==null){\r\n              this.setState({\r\n                ratings: data.map(item => ({\r\n                    song_name: item.song_name,\r\n                    song_artist: item.song_artist,\r\n                    rate:item.rate,\r\n                    comment:item.comment\r\n                })\r\n                ),rec:true})\r\n            }\r\n            else{\r\n                this.setState({rec:false});\r\n            }\r\n          }\r\n          );\r\n  }\r\n\r\n  handleClick(){\r\n    const url = 'http://localhost:8080//getRecommendByUserName?email='+this.state.email;\r\n    fetch(url, { \r\n            method: 'GET' \r\n        }) \r\n        .then(\r\n          (response)=>{ return response.json() }\r\n        )\r\n        .then(data=>{\r\n            if(data!==null){\r\n                this.setState({\r\n                    musiclist: data.map(item => ({\r\n                        song_name: item.song_name,\r\n                        song_artist: item.song_artist,\r\n                        strength:item.strength\r\n                    })\r\n                    )})\r\n        }}\r\n        );\r\n  }\r\n  render() {\r\n    let {hasRec} = this.state.rec;\r\n    const renderInfo = ()=>{\r\n      if(!hasRec){\r\n        return <Row>No recommendation for you</Row>;\r\n      } \r\n    }\r\n    return (\r\n        <Container fluid>\r\n        <Navigate/>\r\n        <Container fluid=\"lg\">\r\n        <Container fluid=\"lg\">\r\n        <Col md={4}>\r\n        <Form>\r\n          <Row>\r\n          <Form.Group controlId=\"recommendation\">\r\n            <Form.Label style={{fontSize: '27px',fontWeight: 'bold'}}>Recommend music based on other users' and your ratings</Form.Label>\r\n          </Form.Group>\r\n          <Button variant=\"dark\" onClick={this.handleClick}>Get recommendation</Button>\r\n          </Row>\r\n        </Form>\r\n        </Col><br/><br/><br/>\r\n        <Container fluid=\"lg\">\r\n        {(this.state.musiclist.map(( listValue, index ) => {\r\n          return (\r\n            <Row key={index}>\r\n              <Col key={index} >Num {index+1} suggested music: </Col>\r\n              <Col >\r\n               Song name : {listValue.song_name}\r\n               </Col >\r\n               <Col >\r\n               Song artist : {listValue.song_artist}\r\n               </Col>\r\n               <Col >\r\n               Recommended strength : {listValue.strength}\r\n               </Col ><br/><br/>\r\n            </Row>\r\n          );\r\n        }))}\r\n        </Container>\r\n      </Container>\r\n          <Container fluid=\"lg\"><br/><br/>\r\n            {this.state.ratings.map(( listValue, index ) => {\r\n          return (\r\n            <Row key={index}>\r\n               <Col style={{ color: 'red' }}>\r\n               Song name : {listValue.song_name}\r\n               </Col >\r\n               <Col style={{ color: 'red' }}>\r\n               Song artist : {listValue.song_artist}\r\n               </Col>\r\n               <Col style={{ color: 'blue' }}>\r\n               Your rating : {listValue.rate}\r\n               </Col>\r\n               <Col style={{ color: 'blue' }}>\r\n               Your comment : {listValue.comment}\r\n               </Col><br/>\r\n            </Row>\r\n          );\r\n        })}\r\n          </Container>\r\n          <Container fluid=\"lg\">\r\n          {renderInfo()}\r\n          </Container>\r\n        </Container>\r\n        </Container>\r\n      );\r\n  }\r\n}\r\n\r\n  export default withRouter(Rating);"]},"metadata":{},"sourceType":"module"}