{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huang\\\\Desktop\\\\frontendDevops-master\\\\frontendDevops-master\\\\clientapp\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Navigate from \"./Navigate\";\nimport Billboard from \"./Billboard\";\nexport class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      songList: [],\n      error: \"no\",\n      email: null\n    };\n  }\n\n  componentWillMount() {\n    if (this.props === undefined || this.props === null) {\n      this.props.history.push('/unauthorized');\n    } else {\n      if (this.props.email === undefined || this.props.email === null) {\n        this.props.history.push('/unauthorized');\n      }\n\n      this.setState({\n        email: this.props.email\n      }, console.log(\"Get email from app component \" + this.props.email));\n      fetch('http://localhost:5080/billboard100', {\n        method: 'POST'\n      }).then(response => {\n        return response.json();\n      }).catch(error => {\n        this.setState({\n          error: error\n        });\n      }).then(data => this.setState({\n        songList: data\n      }));\n    }\n  }\n\n  componentDidMount() {}\n\n  handleRating(name, artist) {\n    const url = 'http://localhost:8080/getRating2?email=' + this.state.email + \"&song_name=\" + name + \"&song_artist=\" + artist;\n    fetch(url, {\n      method: 'GET'\n    }) //.then(\n    //  (response)=>{ return response.json() }\n    //)\n    .then(data => {\n      if (data === -1) {\n        alert(\" You haven't rated it \");\n      } else {\n        alert(\" Your rating is : \" + data);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navigate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Billboard, {\n      songs: this.state.songList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nexport default withRouter(Home);","map":{"version":3,"sources":["C:/Users/huang/Desktop/frontendDevops-master/frontendDevops-master/clientapp/src/components/Home.js"],"names":["React","Component","withRouter","Container","Navigate","Billboard","Home","constructor","props","state","songList","error","email","componentWillMount","undefined","history","push","setState","console","log","fetch","method","then","response","json","catch","data","componentDidMount","handleRating","name","artist","url","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navigate from \"./Navigate\";\r\nimport Billboard from \"./Billboard\";\r\n\r\nexport class Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      songList:[],\r\n      error:\"no\",\r\n      email:null\r\n    };\r\n  }\r\n  componentWillMount() {\r\n       if(this.props === undefined || this.props === null){\r\n         this.props.history.push('/unauthorized');\r\n       }\r\n       else{\r\n         if(this.props.email === undefined || this.props.email === null){\r\n          this.props.history.push('/unauthorized');\r\n         }\r\n        this.setState({email:this.props.email},console.log(\"Get email from app component \"+this.props.email));\r\n        fetch('http://localhost:5080/billboard100', { \r\n            method: 'POST'\r\n        }) \r\n        .then(\r\n          (response)=>{ return response.json() }\r\n        )\r\n        .catch(error=>{this.setState({error:error})})\r\n        .then(data=>this.setState({songList:data}));\r\n       }\r\n  }\r\n  componentDidMount() {\r\n  }\r\n\r\n  handleRating(name,artist){\r\n    const url = 'http://localhost:8080/getRating2?email='+this.state.email+\"&song_name=\"+name+\"&song_artist=\"+artist;\r\n    fetch(url, { \r\n            method: 'GET' \r\n        }) \r\n        //.then(\r\n        //  (response)=>{ return response.json() }\r\n        //)\r\n        .then(data=>{\r\n          if(data===-1){\r\n            alert(\" You haven't rated it \");\r\n          }\r\n          else{\r\n            alert(\" Your rating is : \"+data);\r\n          }\r\n        }\r\n        );\r\n  }\r\n  \r\n  render() {\r\n    \r\n        return (\r\n          <Container fluid>\r\n          <Navigate/>\r\n          <Container fluid=\"lg\">\r\n            <Container fluid=\"lg\">\r\n            <Billboard songs={this.state.songList}/>\r\n            </Container>\r\n          </Container>\r\n          </Container>\r\n        );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Home);"]},"metadata":{},"sourceType":"module"}