{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huang\\\\Desktop\\\\frontendDevops-master\\\\frontendDevops-master\\\\clientapp\\\\src\\\\components\\\\Rating.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Navigate from \"./Navigate\";\nimport Col from \"react-bootstrap/Col\";\nimport { Row } from 'react-bootstrap';\nexport class Rating extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      ratings: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props === undefined || this.props === null) {\n      this.props.history.push('/unauthorized');\n    } else {\n      if (this.props.email === undefined || this.props.email === null) {\n        this.props.history.push('/unauthorized');\n      }\n\n      this.setState({\n        email: this.props.email\n      }, console.log(\"r:Get email from app component \" + this.props.email));\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"get rating \" + this.state.email);\n    const url = 'http://localhost:8080/getUserRatings?email=' + this.state.email;\n    fetch(url, {\n      method: 'GET'\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data !== null) {\n        this.setState({\n          ratings: data.map(item => ({\n            song_name: item.song_name,\n            song_artist: item.song_artist,\n            rate: item.rate,\n            comment: item.comment\n          }))\n        });\n      }\n    });\n  }\n\n  handleClick() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navigate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, this.state.ratings.map((listValue, index) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }\n      }, \"Song name : \", listValue.song_name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }\n      }, \"Song artist : \", listValue.song_artist), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }\n      }, \"Your rating : \", listValue.rate), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }\n      }, \"Your comment : \", listValue.comment));\n    }))));\n  }\n\n}\nexport default withRouter(Rating);","map":{"version":3,"sources":["C:/Users/huang/Desktop/frontendDevops-master/frontendDevops-master/clientapp/src/components/Rating.js"],"names":["React","Component","withRouter","Container","Form","Button","Navigate","Col","Row","Rating","constructor","props","state","email","ratings","handleClick","bind","componentWillMount","undefined","history","push","setState","console","log","componentDidMount","url","fetch","method","then","response","json","data","map","item","song_name","song_artist","rate","comment","render","listValue","index"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Navigate from \"./Navigate\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Row } from 'react-bootstrap';\r\n\r\nexport class Rating extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      email:null,\r\n      ratings:[]\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if(this.props === undefined || this.props === null){\r\n      this.props.history.push('/unauthorized');\r\n    }\r\n    else{\r\n      if(this.props.email === undefined || this.props.email === null){\r\n       this.props.history.push('/unauthorized');\r\n      }\r\n     this.setState({email:this.props.email},console.log(\"r:Get email from app component \"+this.props.email));\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n      console.log(\"get rating \"+this.state.email);\r\n    const url = 'http://localhost:8080/getUserRatings?email='+this.state.email;\r\n    fetch(url, { \r\n            method: 'GET'\r\n        })\r\n        .then(\r\n            (response)=>{ return response.json() }\r\n          )\r\n        .then(data=>{\r\n            if(data!==null){\r\n              this.setState({\r\n                ratings: data.map(item => ({\r\n                    song_name: item.song_name,\r\n                    song_artist: item.song_artist,\r\n                    rate:item.rate,\r\n                    comment:item.comment\r\n                })\r\n                )})\r\n            }\r\n          }\r\n          );\r\n  }\r\n\r\n  handleClick(){\r\n  }\r\n  render() {\r\n    return (\r\n        <Container fluid>\r\n        <Navigate/>\r\n        <Container fluid=\"lg\">\r\n          <Container fluid=\"lg\">\r\n            {this.state.ratings.map(( listValue, index ) => {\r\n          return (\r\n            <Row key={index}>\r\n               <Col>\r\n               Song name : {listValue.song_name}\r\n               </Col>\r\n               <Col>\r\n               Song artist : {listValue.song_artist}\r\n               </Col>\r\n               <Col>\r\n               Your rating : {listValue.rate}\r\n               </Col>\r\n               <Col>\r\n               Your comment : {listValue.comment}\r\n               </Col>\r\n            </Row>\r\n          );\r\n        })}\r\n          </Container>\r\n        </Container>\r\n        </Container>\r\n      );\r\n  }\r\n}\r\n\r\n  export default withRouter(Rating);"]},"metadata":{},"sourceType":"module"}